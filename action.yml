name: "Deploy to Cloud Run"
author: "SafeHouse Tech."
description: |-
  An action to deploy a docker image to cloud run.
inputs:
  env_vars:
    description: |-
      environment variables to pass to the container.
    required: false
  secrets:
    description: |-
      Secrets required during deployment.
    required: false
  credentials_json:
    description: |-
      Credential file for GCP authentication.
    required: true
  gcloud_args:
    description: |-
      Extra gcloud args for cloud run deployment.
    required: false
  gcp_region:
    description: |-
      The GCP region to deploy to.
    required: true
  project_id:
    description: |-
      GCP project ID to deploy on.
    required: true
  service_id:
    description: |-
      This is the name of service which needs to be deployed.
    required: true
  sql_instance:
    description: |-
      SQL instance name to attach it to cloud run service.
    default: backend-dev
    required: false
  set-cloudsql-instances:
    description: |-
      This is to set cloud sql instance.
    required: false
  port:
    description: |-
      Port number on which application is running.
    default: 3000
  service_account:
    description: |-
      Service acoount to attact to cloud run service.
    required: true
  tag:
    description: |-
      container tag
    default: latest
runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Authenticate in GCloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.credentials_json }}
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ inputs.project_id }}
    - name: Set VPC_CONNECTOR env variable
      shell: bash
      run: |
        echo "VPC_CONNECTOR=$(gcloud compute networks vpc-access connectors list --region ${{ inputs.gcp_region }} --format="get(CONNECTOR_ID)" | sort -r | head -n 1)" >> $GITHUB_ENV
    - id: Deploy_to_CloudRun
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ inputs.service_id }}
        image: gcr.io/${{ inputs.project_id }}/safehouse/${{ inputs.service_id }}:${{ inputs.tag }}
        secrets: ${{ inputs.secrets }}
        env_vars: ${{ inputs.env_vars }}
        region: ${{ inputs.gcp_region }}
        flags: --set-cloudsql-instances=${{ inputs.project_id }}:${{ inputs.sql_instance }} --port=${{ inputs.port }} --service-account ${{ inputs.service_account }} --vpc-connector=${{ env.VPC_CONNECTOR }} ${{ inputs.gcloud_args }}
